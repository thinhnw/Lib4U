@model Lib4U.Models.Book

@{
    ViewBag.Title = "Create";
}

@*Star Script*@
<script type="text/javascript">
    function CRateOut(rating) {
        for (var i = 1; i <= rating; i++) {
            $("#span" + i).attr("class","star-box")
        }
    }
    function CRateOver(rating) {
        for (var i = 1; i <= rating; i++) {
            $("#span" + i).attr("class", "star-rate")
        }
    }
    function CRateClick (rating) {
        $("#Rating").val(rating);
        for (var i = 1; i <= rating; i++) {
            $("#span" + i).attr("class", "star-rate")
        }
        for (var i = rating+1; i <= 5; i++) {
            $("#span" + i).attr("class", "star-box")
        }
    }
    function CRateSelected() {
        var rating=$("#Rating").val();
        for (var i = 1; i <= rating; i++) {
            $("#span" + i).attr("class", "star-rate")
        }
    }
</script>
<h2>Create</h2>


@using (Html.BeginForm("Create","Books",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Book</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control-file", @type = "file" } })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Total_pages">Total Pages</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Total_pages, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Total_pages, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 star" onmouseout="CRateSelected()">
            <span id="span1" onmouseout="CRateOut(1)" onmouseover="CRateOver(1)" onclick="CRateClick(1)" class="star-box"></span>
            <span id="span2" onmouseout="CRateOut(2)" onmouseover="CRateOver(2)" onclick="CRateClick(2)" class="star-box"></span>
            <span id="span3" onmouseout="CRateOut(3)" onmouseover="CRateOver(3)" onclick="CRateClick(3)" class="star-box"></span>
            <span id="span4" onmouseout="CRateOut(4)" onmouseover="CRateOver(4)" onclick="CRateClick(4)" class="star-box"></span>
            <span id="span5" onmouseout="CRateOut(5)" onmouseover="CRateOver(5)" onclick="CRateClick(5)" class="star-box"></span>
            <input type="hidden" class="form-control text-box single-line" data-val="true" data-val-number="The field Rating must be a number." data-val-required="The Rating field is required." id="Rating" name="Rating" value="">
            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Published_date">Published Date</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Published_date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Published_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PublisherId, "PublisherId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PublisherId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PublisherId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, "Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @min=1 } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2" for="AvailableQuantity">Available Quantity</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.AvailableQuantity, new { htmlAttributes = new { @class = "form-control", @value = 0 } })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
